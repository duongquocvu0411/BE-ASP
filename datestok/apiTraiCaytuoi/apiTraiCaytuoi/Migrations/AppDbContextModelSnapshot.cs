// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Model.DanhGiaKhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("ho_ten")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("noi_dung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sanphams_id")
                        .HasColumnType("int");

                    b.Property<int>("so_sao")
                        .HasColumnType("int")
                        .HasColumnName("so_sao");

                    b.Property<string>("tieude")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("sanphams_id");

                    b.ToTable("danhgiakhachhangs");
                });

            modelBuilder.Entity("WebApi.Model.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("khachhang_id")
                        .HasColumnType("int");

                    b.Property<string>("order_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("khachhang_id");

                    b.ToTable("hoadons");
                });

            modelBuilder.Entity("WebApi.Model.HoaDonChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("bill_id")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("sanpham_ids")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("bill_id");

                    b.ToTable("hoadonchitiets");
                });

            modelBuilder.Entity("WebApi.Model.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChiCuThe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailDiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("tenThanhpho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tinhthanhquanhuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("khachhangs");
                });

            modelBuilder.Entity("webapi.Model.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("webapi.Model.BannerImages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("BannerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("BannerId");

                    b.ToTable("bannerimages");
                });

            modelBuilder.Entity("webapi.Model.Bannerts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tieude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trangthai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("banners");
                });

            modelBuilder.Entity("webapi.Model.ChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("bai_viet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bao_quan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cong_dung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hinh_dang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("huong_vi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("khoi_luong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mo_ta_chung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ngay_thu_hoach")
                        .HasColumnType("datetime2");

                    b.Property<string>("nong_do_duong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sanphams_id")
                        .HasColumnType("int");

                    b.Property<string>("thanh_phan_dinh_duong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xuat_xu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("sanphams_id")
                        .IsUnique();

                    b.ToTable("chitiets");
                });

            modelBuilder.Entity("webapi.Model.Dactrung", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Thutuhienthi")
                        .HasColumnType("int");

                    b.Property<string>("Tieude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Dactrungs");
                });

            modelBuilder.Entity("webapi.Model.Danhmucsanpham", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("danhmucsanpham");
                });

            modelBuilder.Entity("webapi.Model.Diachichitiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("diachichitiets");
                });

            modelBuilder.Entity("webapi.Model.FooterImgs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Footer_ID")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Footer_ID");

                    b.ToTable("FooterImg");
                });

            modelBuilder.Entity("webapi.Model.HinhAnhSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("hinhanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sanphams_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("sanphams_id");

                    b.ToTable("hinhanh_sanpham");
                });

            modelBuilder.Entity("webapi.Model.Lienhe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghichu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("lien_hes");
                });

            modelBuilder.Entity("webapi.Model.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Thutuhien")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("menu");
                });

            modelBuilder.Entity("webapi.Model.Sanpham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Giatien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Hinhanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tieude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trangthai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("danhmucsanpham_id")
                        .HasColumnType("int");

                    b.Property<string>("don_vi_tinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("danhmucsanpham_id");

                    b.ToTable("sanphams");
                });

            modelBuilder.Entity("webapi.Model.Sanphamsale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("giasale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("sanpham_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("thoigianbatdau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("thoigianketthuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("trangthai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("sanpham_id");

                    b.ToTable("sanphamsale");
                });

            modelBuilder.Entity("webapi.Model.TenFooters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("phude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tieude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TenFooter");
                });

            modelBuilder.Entity("webapi.Model.Tencuahang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trangthai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tencuahang");
                });

            modelBuilder.Entity("WebApi.Model.DanhGiaKhachHang", b =>
                {
                    b.HasOne("webapi.Model.Sanpham", "Sanpham")
                        .WithMany("Danhgiakhachhangs")
                        .HasForeignKey("sanphams_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sanpham");
                });

            modelBuilder.Entity("WebApi.Model.HoaDon", b =>
                {
                    b.HasOne("WebApi.Model.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("khachhang_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("WebApi.Model.HoaDonChiTiet", b =>
                {
                    b.HasOne("WebApi.Model.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("bill_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("webapi.Model.BannerImages", b =>
                {
                    b.HasOne("webapi.Model.Bannerts", "Banner")
                        .WithMany("BannerImages")
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");
                });

            modelBuilder.Entity("webapi.Model.ChiTiet", b =>
                {
                    b.HasOne("webapi.Model.Sanpham", "Sanpham")
                        .WithOne("ChiTiet")
                        .HasForeignKey("webapi.Model.ChiTiet", "sanphams_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sanpham");
                });

            modelBuilder.Entity("webapi.Model.FooterImgs", b =>
                {
                    b.HasOne("webapi.Model.TenFooters", "TenFooters")
                        .WithMany("FooterIMG")
                        .HasForeignKey("Footer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TenFooters");
                });

            modelBuilder.Entity("webapi.Model.HinhAnhSanPham", b =>
                {
                    b.HasOne("webapi.Model.Sanpham", "Sanpham")
                        .WithMany("Images")
                        .HasForeignKey("sanphams_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sanpham");
                });

            modelBuilder.Entity("webapi.Model.Sanpham", b =>
                {
                    b.HasOne("webapi.Model.Danhmucsanpham", "Danhmucsanpham")
                        .WithMany()
                        .HasForeignKey("danhmucsanpham_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danhmucsanpham");
                });

            modelBuilder.Entity("webapi.Model.Sanphamsale", b =>
                {
                    b.HasOne("webapi.Model.Sanpham", "Sanpham")
                        .WithMany("SanphamSales")
                        .HasForeignKey("sanpham_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sanpham");
                });

            modelBuilder.Entity("WebApi.Model.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("WebApi.Model.KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("webapi.Model.Bannerts", b =>
                {
                    b.Navigation("BannerImages");
                });

            modelBuilder.Entity("webapi.Model.Sanpham", b =>
                {
                    b.Navigation("ChiTiet");

                    b.Navigation("Danhgiakhachhangs");

                    b.Navigation("Images");

                    b.Navigation("SanphamSales");
                });

            modelBuilder.Entity("webapi.Model.TenFooters", b =>
                {
                    b.Navigation("FooterIMG");
                });
#pragma warning restore 612, 618
        }
    }
}
